# nope #include "services.fcl"

#include "AddGenieEventsToArt.fcl"
#include "GenieOutput.fcl"

process_name:  MoreGenie

services:
{
  # Load the service that manages root files for histograms.
  TFileService:          { fileName: "addgenie_hist.root" closeFileFast: false }
  RandomNumberGenerator: {} #ART native random number generator
  scheduler:             { wantTracer: true wantSummary: true }

  # IFDH:          {IFDH_BASE_URI:  "http://samweb.fnal.gov:8480/sam/nova/api"}
  # nope  @table::standard_services
}

# Edit here to generate in a different detector. See Geometry.fcl
# If this is changed be sure to change the GENIE flux (below) to match
# services.Geometry: @local::nd_geo

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  firstRun:    1000001     # Run number to use for this file
  firstSubRun: 1           # Subrun number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    # when fetched from file by dump module they'll come back
    # ordered alphabetically by label, so for convenience put
    # them in in that order (easing comparisons)
##    cosmic:   @local::standard_add_genie
    dk2nu:    @local::standard_add_genie
#    gnumi:    @local::standard_add_genie
#    gsimple:  @local::standard_add_genie
##    nuone:    @local::standard_add_genie
#    protondk: @local::standard_add_genie
##    rock:     @local::standard_add_genie
  }

  analyzers:
  {
    outputgenie:  @local::standard_genie_output
  }

##  simulate: [ cosmic, dk2nu, gnumi, gsimple, nuone, protondk, rock ]
#  simulate: [ dk2nu, gnumi, gsimple, protondk ]
#  simulate: [ protondk ]
   simulate: [ dk2nu ]

  stream1:  [ outputgenie, out1 ]

  trigger_paths:   [ simulate ]
  end_paths:       [ stream1 ]

}

outputs:
{
  out1:
  {
    module_type:  RootOutput
    fileName:     "addgenie.root"   # default name, override w/ -o --output
    SelectEvents: [ simulate ]
  }
}

##physics.producers.cosmic.fileList: [ "genie_samples/*cosmic*.ghep.root" ]
##physics.producers.cosmic.timeConfig: "none"
##physics.producers.cosmic.addMCFlux: false
##physics.producers.cosmic.countConfig:  "fixed: 1"  # always exactly 1

### these fake files should have dk2nu flux info
physics.producers.dk2nu.fileList: [ "genie_samples/*dk2nu*.ghep.root" ]
physics.producers.dk2nu.timeConfig: "NuMI"
physics.producers.dk2nu.addMCFlux: true
physics.producers.dk2nu.countConfig:  "gauss: 2.0 1.5"

### these fake files should have gnumi flux info
#physics.producers.gnumi.fileList: [ "genie_samples/*gnumi*.ghep.root" ]
#physics.producers.gnumi.timeConfig: "NuMI"
#physics.producers.gnumi.addMCFlux: true
#physics.producers.gnumi.countConfig:  "poisson: 1.25"

### these fake files should have gsimple flux info
#physics.producers.gsimple.fileList: [ "genie_samples/*gsimple*.ghep.root" ]
#physics.producers.gsimple.timeConfig: "NuMI"
#physics.producers.gsimple.addMCFlux: true
#physics.producers.gsimple.countConfig:  "poisson-1: 2.4"

### these nu on electron files should have gsimple flux info
##physics.producers.nuone.fileList: [ "genie_samples/*nuone*.ghep.root" ]
##physics.producers.nuone.timeConfig: "NuMI"
##physics.producers.nuone.addMCFlux: true
##physics.producers.nuone.countConfig:  "fixed: 1"

### obviously no flux ...
#physics.producers.protondk.fileList: [ "genie_samples/*protondk*.ghep.root" ]
#physics.producers.protondk.timeConfig: "flat 100000"
#physics.producers.protondk.addMCFlux: false
#physics.producers.protondk.countConfig:  "flat 4 8"
### also need to be scattered about
#physics.producers.protondk.vtxOffsets: {
#   xlo: -1 # meters
#   xhi:  1
#   ylo: -1
#   yhi:  1
#   zlo:  1
#   zhi:  5
#}

### these fake files don't have flux info (generated w/ gevgen)
##physics.producers.rock.fileList: [ "genie_samples/*rock*.ghep.root" ]
##physics.producers.rock.timeConfig: "NuMI"
##physics.producers.rock.addMCFlux: false # true
##physics.producers.rock.countConfig:  "poisson: 4.2"

physics.analyzers.outputgenie.dumpFilePattern: "cout"
physics.analyzers.outputgenie.dumpMCTruth: true
physics.analyzers.outputgenie.dumpGTruth:  true
physics.analyzers.outputgenie.dumpMCFlux:  true

# end-of-fcl
