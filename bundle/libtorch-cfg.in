########################################################################
# Distribution build configuration for @DIST_BUILD_SPEC@
#
#   Build libtorch and friends.
########################################################################

basequal=${1}

# Make sure the label is what we expect (BLAS specification)
# Note that the default is openBLAS and requires no build label
case ${build_label} in
  lapack|LAPACK) blas_type=lapack; build_label=lapack; pyver=v3_7_2; sver=v3_26_00_00;;
  *) blas_type=open; pyver=@PYTHON_VERSION@; sver=@SQLITE_VERSION@;;
esac

# Specify version to bootstrap and setup UPS.
check_ups @UPS_VERSION@

# We\'re special, and only need the latest version of CMake.
cmakes=(@CMAKE_VERSION_LIST@)
CMAKE_VERSION="${cmakes[@]: -1}"

# Compilers.
@BUILD_COMPILERS@

# Python (required for build only).
do_build -m sqlite ${sver}
do_build -m python ${pyver}

case $blas_type in
  lapack) # Special build compatible with older distributions.
    do_build lapack v3_8_0c ${basequal}
    do_build protobuf v3_11_2a ${basequal}
    build_noarch -m pybind11 v2_2_4
    build_noarch -m eigen v3_3_5
    do_build -m fftw v3_3_8a ${basequal}
    ;;
  open)
    do_build openblas @OPENBLAS_VERSION@ ${basequal}
    do_build protobuf @PROTOBUF_VERSION@ ${basequal}
    build_noarch -m pybind11 @PYBIND11_VERSION@
    build_noarch -m eigen @EIGEN_VERSION@
    build_type=prof do_build -m fftw @FFTW_VERSION@ ${basequal}
    ;;
  *)
    echo "INTERNAL ERROR: unable to account for recognized build label ${blas_type}" 1>&2  
esac
##################

# Other packages required by libtorch.
do_build -m gmp @GMP_VERSION@
do_build -m mpfr @MPFR_VERSION@

# Build libtorch.
do_build libtorch @LIBTORCH_VERSION@ ${basequal}${build_label:+\:${build_label}}

# Local Variables:
# mode: sh
# eval: (sh-set-shell "bash")
# End:
