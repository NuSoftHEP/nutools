########################################################################
# Distribution build configuration for @DIST_BUILD_SPEC@
#
#   Build TAUOLA C++ and friends.
########################################################################

basequal=${1}

# Make sure the label is what we expect (Python "pqual" qualifier).
[[ "${build_label}" =~ ^p[23][[:digit:]]+[[:alpha:]]*$ ]] || \
  { echo "FATAL ERROR: unrecognized build label ${build_label}" 1>&2
  return 1; }

# Construct the Python version.
case ${build_label#p} in
  2*) pyver=v2_${build_label:2:1}_${build_label:3};;
  3[789]*) pyver=v3_${build_label:2:1}_${build_label:3};;
  3*) pyver=v3_${build_label:2:2}_${build_label:4};;
esac

# Now need to ascertain SQLite version.
case ${pyver} in
  v2_7_15a|v3_7_2) sver=v3_26_00_00;;
  v3_8_2) sver=v3_31_01_00;;
  v3_8_3) sver=v3_31_01_00a;;
  v3_8_3a) sver=v3_32_02_00;;
  v3_8_3b) sver=v3_32_03_00;;
  v3_9_2) sver=v3_34_01_00;;
  v3_9_13) sver=v3_39_02_00;;
  *)  echo "FATAL ERROR: no SQLite version recorded for Python $pyver" 1>&2
esac

# Specify version to bootstrap and setup UPS.
check_ups @UPS_VERSION@

# We\'re special, and only need the latest version of CMake.
cmakes=(@CMAKE_VERSION_LIST@)
CMAKE_VERSION="${cmakes[@]: -1}"
@BUILD_COMPILERS@

# Make sure we have the appropriate SQLite and Python.
do_build sqlite ${sver}
do_build python ${pyver}
if version_greater v2_7_13d ${pyver}; then
   do_build setuptools @SETUPTOOLS_VERSION@ ${build_label}
fi

# Headline packages for the distribution.
do_build lhapdf @LHAPDF_VERSION@ ${basequal}:${build_label}
do_build hepmc3 @HEPMC3_VERSION@ ${basequal}:${build_label}
do_build pythia8 @PYTHIA8_VERSION@ ${basequal}:${build_label}
do_build tauola @TAUOLA_VERSION@ ${basequal}:${build_label}

# Local Variables:
# mode: sh
# eval: (sh-set-shell "bash")
# End:
