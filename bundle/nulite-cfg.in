# build nu distribution

basequal=${1}

# specify version to bootstrap and setup ups
check_ups @UPS_VERSION@

build_bundle nulite_base-@NULITE_DOT_VERSION@ ${basequal} || return $?

# check the build label here after building nulite_base
[[ "${build_label}" == py2 ]] && pyqual=:${build_label}

do_build cmake v3_17_3
ensure_cetpkgsupport @CETPKGSUPPORT_VERSION@
ensure_cetbuildtools @CETBUILDTOOLS_VERSION_LIST@
ensure_support_package -f NULL studio @STUDIO_VERSION@

build_bundle art-@ART_SUITE_DOT_VERSION@ ${basequal} || return $?
build_cet canvas_root_io @CANVAS_ROOT_IO_VERSION@ ${basequal}${pyqual}
build_cet art_root_io @ART_ROOT_IO_VERSION@ ${basequal}${pyqual}

if [[ -z "${version_set}" ]]; then
  echo "ERROR: version set must be specified for artdaq_core"
  return 1
fi

# as of v1_07_00, artdaq_core is built with canvas and TRACE
# TRACE >= v3_14_00 needs buildFW >= 4.00.00 and cetmodules.
if (( $(print_version | cut -d' ' -f 2 | cut -d. -f1) < 4)); then
  echo "ERROR TRACE >= v3_14_00 needs buildFW >= 4.00.00" 1>&2
  return 1;
fi
build_cet_null -DWANT_UPS=1 cetmodules @CETMODULES_VERSION@

build_cet -p trace-git TRACE @TRACE_VERSION@ -nq-

build_cet -p artdaq-core artdaq_core @ARTDAQ_CORE_VERSION@ ${basequal}${pyqual}:@version_set@

build_cet -p "ifdh-art/ifdh_art.git" ifdh_art @IFDH_ART_VERSION@ ${basequal}${pyqual}
build_cet toyExperiment @TOYEXPERIMENT_VERSION@ ${basequal}${pyqual}:@version_set@

build_cet nusimdata @NUSIMDATA_VERSION@ ${basequal}${pyqual}
build_cet nuevdb @NUEVDB_VERSION@ ${basequal}${pyqual}
build_cet nug4 @NUG4_VERSION@ ${basequal}${pyqual}
build_cet geant4reweight @GEANT4REWEIGHT_VERSION@ ${basequal}${pyqual}:@version_set@
build_cet nugen @NUGEN_VERSION@ ${basequal}${pyqual}
build_cet nurandom @NURANDOM_VERSION@ ${basequal}${pyqual}
build_cet nutools @NUTOOLS_VERSION@ ${basequal}${pyqual}
build_cet ppfx @PPFX_VERSION@ ${basequal}${pyqual}

return 0
