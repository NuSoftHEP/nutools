########################################################################
# Distribution build configuration for @DIST_BUILD_SPEC@
#
#   Build the Nu-Lite distribution.
########################################################################

basequal=${1}

# Special requirements on buildFW version for modern Cetmodules and MRB.
# The TRACE build needs to specify the version of cetmodules
# This feature requires buildFW 5.04.01 or greater
if version_greater $(latest_version @CETMODULES_VERSION_LIST@) v3_02_99 ||
    version_greater @MRB_VERSION@ v5_99_99; then
  @DEFINE_REQUIRE_BUILDFW_VERSION@
  require_buildfw_version 6.00.00 || return
fi

# Specify version to bootstrap and setup UPS.
check_ups @UPS_VERSION@

build_bundle @NULITE_BASE_NAME@-@NULITE_BASE_DOT_VERSION@ ${basequal} || return

build_bundle @IFDH_NAME@-@IFDH_DOT_VERSION@ ${basequal} || return

@INIT_PYQUAL_VARS@

for cv in @CMAKE_VERSION_LIST@; do
  do_build cmake ${cv}
done

ensure_cetpkgsupport @CETPKGSUPPORT_VERSION@
for _cps_cetmodules_ver in @CETMODULES_VERSION_LIST@; do
  ensure_support_package -f NULL -- cetmodules ${_cps_cetmodules_ver}
done
ensure_cetbuildtools @CETBUILDTOOLS_VERSION_LIST@
ensure_support_package -f NULL studio @STUDIO_VERSION@

# mrb
do_build hub @HUB_VERSION@
do_build gh @GH_VERSION@
build_cet -G art-framework-suite mrb @MRB_VERSION@

build_bundle @ART_SUITE_NAME@-@ART_SUITE_DOT_VERSION@ ${basequal} || return
build_cet canvas_root_io @CANVAS_ROOT_IO_VERSION@ ${basequal}${pylabel}
build_cet art_root_io @ART_ROOT_IO_VERSION@ ${basequal}${pylabel}

if [[ -z "${version_set}" ]]; then
  echo "ERROR: version set must be specified for artdaq_core" 1>&2
  return 1
fi

build_cet_null -DWANT_UPS=1 cetmodules @CETMODULES1_VERSION@

build_cet -p trace-git -w v1_04_00 TRACE @TRACE_VERSION@ -nq-

build_cet -p artdaq-core artdaq_core @ARTDAQ_CORE_VERSION@ ${basequal}${pylabel}:@version_set@

build_cet toyExperiment @TOYEXPERIMENT_VERSION@ ${basequal}${pylabel}:@version_set@

build_cet -G NuSoftHEP nusimdata @NUSIMDATA_VERSION@ ${basequal}${pylabel}
build_cet -G NuSoftHEP nuevdb @NUEVDB_VERSION@ ${basequal}${pylabel}
build_cet -G NuSoftHEP nug4 @NUG4_VERSION@ ${basequal}${pylabel}
build_cet -G NuSoftHEP geant4reweight @GEANT4REWEIGHT_VERSION@ ${basequal}${pylabel}:@version_set@
build_cet -G NuSoftHEP nugen @NUGEN_VERSION@ ${basequal}${pylabel}
build_cet -G NuSoftHEP nurandom @NURANDOM_VERSION@ ${basequal}${pylabel}
build_cet -G NuSoftHEP nutools @NUTOOLS_VERSION@ ${basequal}${pylabel}
# extras
build_cet -G LArSoft systematicstools @SYSTEMATICSTOOLS_VERSION@ ${basequal}
build_cet -G LArSoft nusystematics @NUSYSTEMATICS_VERSION@ ${basequal}
build_cet ppfx @PPFX_VERSION@ ${basequal}${pylabel}

# Local Variables:
# mode: sh
# eval: (sh-set-shell "bash")
# End:
