########################################################################
# Distribution build configuration for @DIST_BUILD_SPEC@
#
#   Build the Nu-Lite-base supporting distribution.
########################################################################

basequal=${1}

# Specify version to bootstrap and setup UPS.
check_ups @UPS_VERSION@

# Canvas.
build_bundle canvas_product_stack-@CANVAS_STACK_DOT_VERSION@ ${basequal} || return

# Handle Python.
@INIT_PYQUAL_VARS@

do_build cry @CRY_VERSION@ ${basequal}

# LHAPDF.
do_build lhapdf @LHAPDF_VERSION@ ${basequal}:${pyqual}

# Geant4 depdendencies.
do_build xerces_c @XERCES_C_VERSION@ ${basequal}
do_build log4cpp @LOG4CPP_VERSION@ ${basequal}

# Add g4* datasets before building Geant4.
build_noarch g4abla       @G4ABLA_VERSION@
build_noarch g4emlow      @G4EMLOW_VERSION@
build_noarch g4incl @G4INCL_VERSION@
build_noarch g4neutron    @G4NEUTRON_VERSION@
build_noarch g4particlexs  @G4PARTICLEXS_VERSION@
build_noarch g4nucleonxs  @G4NUCLEONXS_VERSION@
build_noarch g4nuclide    @G4NUCLIDE_VERSION@
build_noarch g4photon     @G4PHOTON_VERSION@
build_noarch g4pii        @G4PII_VERSION@
build_noarch g4radiative  @G4RADIATIVE_VERSION@
build_noarch g4surface    @G4SURFACE_VERSION@
build_noarch g4tendl      @G4TENDL_VERSION@
do_build geant4 @GEANT4_VERSION@ ${basequal}

# GENIE.
do_build genie @GENIE_VERSION@ ${basequal}${pylabel}
do_build dk2nudata @DK2NUDATA_VERSION@ ${basequal}${pylabel}
do_build dk2nugenie @DK2NUGENIE_VERSION@ ${basequal}${pylabel}

# IFDH.
do_build libwda @LIBWDA_VERSION@
do_build ifdhc @IFDHC_VERSION@  ${basequal}:${pyqual}
build_noarch ifdhc_config @IFDHC_CONFIG_VERSION@
do_build ifbeam @IFBEAM_VERSION@  ${basequal}:${pyqual}
do_build nucondb @NUCONDB_VERSION@  ${basequal}:${pyqual}

# pygccxml and castxml
if [ "${flvr}" != "Darwin64bit+15" ]; then
  do_build castxml @CASTXML_VERSION@
fi
do_build pygccxml @PYGCCXML_VERSION@ ${pyqual} 

# Tensorflow.
do_build protobuf @PROTOBUF_VERSION@ ${basequal}
# temporarily unable to build
#if [[ "${basequal}" == e19 ]]; then # Cannot build for clang.
#  do_build tensorflow @TENSORFLOW_VERSION@ ${basequal}${pylabel}
#fi

# pick up libtorch
build_bundle libtorch-@LIBTORCH_DOT_VERSION@ ${basequal} || return

# Data-only packages.
build_noarch genie_phyopt @GENIE_PHYOPT_VERSION@ dkcharm
build_noarch genie_phyopt @GENIE_PHYOPT_VERSION@ dkcharmtau
build_noarch genie_xsec @GENIE_XSEC_VERSION@ G1810a0211a-k250-e1000

# Local Variables:
# mode: sh
# eval: (sh-set-shell "bash")
# End:
